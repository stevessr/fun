version: '3.8'

services:
  dark-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dark-server
    restart: unless-stopped
    ports:
      - "8889:8889"  # HTTP proxy port
      - "9998:9998"  # WebSocket port
    environment:
      - RUST_LOG=info
      - DARK_SERVER_HTTP_PORT=8889
      - DARK_SERVER_WS_PORT=9998
      - DARK_SERVER_HOST=0.0.0.0
    networks:
      - dark-server-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Optional: Mount configuration file
    # volumes:
    #   - ./config.toml:/app/config.toml:ro
    
  # Optional: Add a reverse proxy (nginx)
  nginx:
    image: nginx:alpine
    container_name: dark-server-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - dark-server
    networks:
      - dark-server-network
    profiles:
      - with-nginx

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: dark-server-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - dark-server-network
    profiles:
      - with-monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dark-server-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - dark-server-network
    profiles:
      - with-monitoring

networks:
  dark-server-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
